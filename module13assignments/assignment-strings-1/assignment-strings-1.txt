Q1.Input a string of size n and update all the odd positions in the string to character ‘#’. Consider 0-based indexing.
Ans-
#include<bits/stdc++.h>
using namespace std;
int main() {
    string str;
    cout << "Enter a string: ";
    cin >> str;
    for(int i = 1; i < str.length(); i += 2) {
        str[i] = '#';
    }
    cout << str;
    return 0;
}

Q2.Input a string of length n and count all the consonants in the given string.
Ans-
#include<bits/stdc++.h>
using namespace std;
bool isVowel(char c) {
    c = tolower(c);
    return (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u');
}
int main() {
    string str;
    int consonantCount = 0;
    cout << "Enter a string: ";
    cin >> str;
    for(char c : str) {
        if(isalpha(c) && !isVowel(c)) {
            consonantCount++;
        }
    }
    cout << consonantCount;
    return 0;
}

Q3.Check whether the given string is palindrome or not.
Ans-
#include<bits/stdc++.h>
using namespace std;
int main() {
    string str;
    cout << "Enter a string: ";
    cin >> str;
    string reversedStr = str;
    reverse(reversedStr.begin(), reversedStr.end());
    if(str == reversedStr) {
        cout << "Yes";
    } else {
        cout << "No";
    }
    return 0;
}

Q4.Input a string of even length and reverse the second half of the string.
Ans-
#include<bits/stdc++.h>
using namespace std;
int main() {
    string str;
    cout << "Enter a string: ";
    cin >> str;
    int n = str.length();
    if(n % 2 == 0) {
        reverse(str.begin() + n/2, str.end());
    }
    cout << str;
    return 0;
}

Q5.Input a string of length less than 10 and convert it into integer without using builtin function.
Ans-
#include<bits/stdc++.h>
using namespace std;
int main() {
    string str;
    cout << "Enter a string of digits: ";
    cin >> str;
    int number = 0;
    for(char c : str) {
        number = number * 10 + (c - '0');
    }
    cout << number;
    return 0;
}

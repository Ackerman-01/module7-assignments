Q1.Write a program to calculate the sum of the digits of a given positive integer using recursion
ans-
#include<iostream>
using namespace std;
int sumOfDigits(int n) {
    if(n == 0)
        return 0;
    return n % 10 + sumOfDigits(n / 10);
}
int main() {
    int n;
    cin >> n;
    cout << sumOfDigits(n) << endl;
    return 0;
}
Q2: Write a program to calculate the reverse of a given positive integer using recursion
ans-
#include<iostream>
using namespace std;
void reverseNumber(int n, int &rev) {
    if(n == 0)
        return;
    rev = rev * 10 + n % 10;
    reverseNumber(n / 10, rev);
}
int main() {
    int n, rev = 0;
    cin >> n;
    reverseNumber(n, rev);
    cout << rev << endl;
    return 0;
}

Q3: Given an integer num, return the number of steps to reduce it to zero. In one step, if the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.
ans-
#include<iostream>
using namespace std;
int reduceToZero(int num) {
    if(num == 0)
        return 0;
    if(num % 2 == 0)
        return 1 + reduceToZero(num / 2);
    return 1 + reduceToZero(num - 1);
}
int main() {
    int num;
    cin >> num;
    cout << reduceToZero(num) << endl;
    return 0;
}
Q4: Predict the output:
int fun(int n) {
    if (n <= 1) return 1;
    if (n % 2 == 0) return fun(n / 2);
    return fun(n / 2) + fun(n / 2 + 1);
}

ans-
for n=5
the function returns 3

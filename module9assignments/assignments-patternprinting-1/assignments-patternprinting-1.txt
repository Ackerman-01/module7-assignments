q1. Print the following pattern
1 1 1 1
2 2 2 2
3 3 3 3
4 4 4 4

ans=
#include <iostream>
using namespace std;
int main() {
int n;
cin >> n;
for(int i = 1; i <= n; ++i) {
for(int j = 1; j <= n; ++j) {
cout << i << " ";
}
cout << endl;
}
return 0;
}

q2. Print the following pattern
Input: n = 4
Output:
1 2 3 4
1 2 3
1 2
1

ans=
#include <iostream>
using namespace std;
int main() {
int n;
cin >> n;
for(int i = 1; i <= n; ++i) {
for(int j = 1; j <= n-i+1; ++j) {
cout << j << " ";
}
cout << endl;
}
return 0;
}

q3. Print the following pattern
Input: n = 4
Output:
A
A B
A B C
A B C D

ans=
#include <iostream>
using namespace std;
int main() {
int n;
cin >> n;
for(int i = 1; i <= n; ++i) {
for(int j = 1; j <= i; ++j) {
cout << (char)('A'+j-1) << " ";
}
cout << endl;
}
return 0;
}

q4. Print the following pattern
Input: n = 4
Output:
1
A B
1 2 3
A B C D
1 2 3 4 5

ans=
#include <bits/stdc++.h>
int main() {
int n;
cin >> n;
for(int i = 1; i <= n; ++i) {
if(i % 2 == 1)
for(int j = 1; j <= i; ++j) {
cout << j << " ";
}
else
for(int j = 1; j <= i; ++j) {
cout << (char) ('A' + j - 1) << " ";
}
cout << endl;
}
return 0;
}

q5. Print the following pattern
Input n = 4
Output:
*
**
***
****
***
**
*
ans=

#include <bits/stdc++.h>
int main() {
int n;
cin >> n;
// Printing upper triangle
for(int i = 0; i < n; ++i) {
for(int j = 0; j <= i; ++j) {
cout << "* ";
}
cout << endl;
}
// Printing lower triangle
for(int i = 0; i < n-1; ++i) {
for(int j = 0; j < n - i - 1; ++j) {
cout << "* ";
}
cout << endl;
}

q6. Print the following pattern
Sample Input : m = 4, n = 6
Sample Output :
******
* *
* *
******
ans=

#include <iostream>
using namespace std;
int main() {
int m, n;
cin >> m >> n;
for(int i = 0; i < m; ++i) {
for(int j = 0; j < n; ++j) {
if(i == 0 || j == 0 || i == m-1 || j == n-1) {
cout << "* ";
} else {
cout << " ";
}
}
cout << endl;
}
return 0;
}

q7. Print the following pattern
Sample Input : n = 4
Output :
****
****
****
****
ans=

#include <iostream>
using namespace std;
int main() {
int n;
cin >> n;
for(int i = 0; i < n; ++i) {
for(int j = 0; j < n-i-1; ++j) {
cout << " ";
}
for(int j = 0; j < n; ++j) {
cout << "* ";
}
cout << endl;
}
return 0;
}

q8. Print the following pattern
Sample Input : n= 4
Output :
1
1 2
1 2 3
1 2 3 4
ans=

#include <iostream>
using namespace std;
int main() {
int n;
cin >> n;
for(int i = 0; i < n; ++i) {
for(int j = 0; j < n-i-1; ++j) {
cout << " ";
}
for(int j = 1; j <= i+1; ++j) {
cout << j << " ";
}
cout << endl;
}
return 0;
}

q9. Print the following pattern
Input : n = 4
Output :
A
A B
A B C
A B C D
ans=

#include <iostream>
using namespace std;
int main() {
int n;
cin >> n;
for(int i = 0; i < n; ++i) {
for(int j = 0; j < n-i-1; ++j) {
cout << " ";
}
for(int j = 1; j <= i+1; ++j) {
cout << (char)('A' + j - 1) << " ";
}
cout << endl;
}
return 0;
}

q10. Print the following pattern
Input: n = 4
Output:
1
2 1
3 2 1
4 3 2 1
ans=

#include <iostream>
using namespace std;
int main() {
int n;
cin >> n;
for(int i = 0; i < n; ++i) {
for(int j = 0; j < n-i-1; ++j) {
cout << " ";
}
for(int j = i+1; j >= 1; --j) {
cout << j << " ";
}
cout << endl;
}
return 0;
}

q11. Print the following pattern
Input: n = 4
Output:
*
**
***
****
***
**
*

ans=

#include <bits/stdc++.h>
int main() {
int n;
cin >> n;
// Printing upper triangle
for(int i = 0; i < n; ++i) {
for(int j = 0; j < n-i-1; ++j) {
cout << " ";
}
for(int j = 0; j <= i; ++j) {
cout << "* ";
}
cout << endl;
}
// Printing lower triangle
for(int i = 0; i < n-1; ++i) {
for(int j = 0; j <= i; ++j) {
cout << " ";
}
